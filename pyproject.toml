[project]
name = "coordinate-transformation-api"
description = "Coordinate Transformation API of the Nederlandse Samenwerking Geodetische Infrastructuur (NSGI)"
keywords = ["NSGI", "pyproj", "fastapi", "coordinates", "geo"]
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
]
readme = { file = "./README.md", content-type = "text/markdown" }
dependencies = [
    "fastapi[all] == 0.110.0",
    "uvicorn == 0.27.1",
    "pyyaml == 6.0.1",
    "geojson_pydantic == 1.0.2",
    "pyproj == 3.6.1",
    "pydantic-settings == 2.2.1",
    "email-validator == 2.1.1",
    "geodense == 1.0.0",
]
requires-python = ">=3.11.4"
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "black == 24.2.0",
    "coverage == 7.4.3",
    "mypy == 1.8.0",
    "pytest == 8.1.0",
    "ruff == 0.3.0",
    "types-ujson == 5.9.0.0",
    "types-PyYAML == 6.0.12.12",
    "pytest-asyncio == 0.23.5",
]

[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project.scripts]
ct-api = "coordinate_transformation_api.main:main"

[tool.setuptools.packages.find]
where = ["src"] # list of folders that contain the packages (["."] by default)
include = [
    "coordinate_transformation_api*",
] # package names should match these glob patterns (["*"] by default)
namespaces = false # to disable scanning PEP 420 namespaces (true by default)

[tool.setuptools.package-data]
"coordinate_transformation_api.assets" = ["*"]
"coordinate_transformation_api.assets.static" = ["*"]

[tool.setuptools_scm]

[tool.ruff]
# see https://beta.ruff.rs/docs/rules/
select = [
    "E",
    "F",
    "B",
    "ISC",
    "PL",
    "RUF",
    "PT",
    "N",
    "I",
    "C90",
    "W",
    "UP",
    "S",
    "ARG",
    "SIM",
    "Q",
    "ANN",
]
# Avoid enforcing line-length violations (`E501`) - fixed by Black
ignore = ["E501"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "E",
    "F",
    "B",
    "ISC",
    "PL",
    "RUF",
    "PT",
    "N",
    "I",
    "C90",
    "W",
    "UP",
    "S",
    "ARG",
    "SIM",
    "Q",
]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "build"
]

line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py39"

# disable rules for tests
[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed
    "ANN",  # no type annotation required
]

"src/coordinate_transformation_api/cityjson/models.py" = [
    "N815", # non-snakecase variables allowed
]

"src/coordinate_transformation_api/util.py" = ["ANN"]


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
