---
openapi: "3.1.0"
info:
  title: NSGI Coordinates Transformation API
  version: 2.0.0
  description: >
    The Coordinates Transformation API performs coordinate transformations on GeoJSON and CityJSON files using the official RDNAPTRANSâ„¢
    transformation procedure.
  contact:
    name: NSGI
    email: info@nsgi.nl
    url: https://www.nsgi.nl
  termsOfService: https://creativecommons.org/licenses/by/4.0/
  x-keywords:
    - geospatial
    - api
    - transformations
servers:
  - url: "" # replaced in code
tags:
  - name: About
  - name: CRS
  - name: Density
  - name: Transform
paths:
  /:
    get:
      operationId: "get-landing-page"
      tags:
      - About
      summary: Landing Page
      description: OGC Common API landing page
      responses:
          "200":
            description: OK
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/landingPage"
                example:
                  title: My API
                  description: Landing page describing the capabilities of this API
                  links:
                    - title: OGC Common Landing Page
                      type: application/json
                      rel: self
                      href: http://example.com/?f=json
            headers:
              api-version:
                $ref: "#/components/headers/api-version"
  /openapi:
    get:
      operationId: "get-oas"
      tags:
        - About
      summary: OAS
      description: The Open API Specification (OAS) document of this API.
      responses:
        "200":
          $ref: "#/components/responses/200-oas"
        "400":
          $ref: "#/components/responses/400"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"
  /conformance:
    get:
      operationId: "get-conformance"
      tags:
        - About
      summary: Conformance page
      description: >
        OGC API Common Conformance page describing the capabilities of this API
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ConformanceDeclaration"
            text/html:
              schema:
                $ref: "#/components/responses/htmlSchema"
          headers:
            api-version:
              $ref: "#/components/headers/api-version"

        "400":
          $ref: "#/components/responses/400"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"
  /crss:
    get:
      operationId: "get-crss"
      tags:
        - CRS
      summary: Get all supported CRSs in the transformation API
      description: Get all available coordinate reference systems (CRS)
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crs'
                type: array
                title: CRS List
  /crss/{crs-id}:
    get:
      operationId: "get-crs"
      tags:
      - CRS
      summary: Get a single CRS
      description: >
        Endpoint that returns a single coordinate reference system (CRS) by `crs-id` (format: `{authority:identifier}`, for example: `EPSG:28992`).
      parameters:
        - name: "crs-id"
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/crs-enum'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crs'
        "400":
          $ref: "#/components/responses/400"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"
  /density-check:
    post:
      operationId: "post-density-check"
      tags:
        - Density
      summary: >
        Check density of (multi)polygon and (multi)linestring geometries based on geodesic (ellipsoidal great-circle) distance
        in ETRS89 (EPSG:4258).
      description: "Check density of polygon and linestring geometries"
      parameters:
        - $ref: "#/components/parameters/source-crs"
        - $ref: "#/components/parameters/contentCrs"
        - $ref: "#/components/parameters/maxSegmentLength"
        - $ref: "#/components/parameters/maxSegmentDeviation"

      requestBody:
        required: true
        description: |
          GeoJSON FeatureCollection objects may contain a `crs` member containing a named CRS, to indicate the source-crs. The crs `properties.name` value should conform to the OGC URN scheme:
          ```
          "crs": {
            "type": "name",
            "properties": {
              "name": "urn:ogc:def:crs:OGC:1."3":CRS84"
            }
          }
          ```
          When `crs` is specified in the request body, the `source-crs` query parameter or `content-crs` request header may be omitted.
          > **Note:** The `crs` member is not part of the [FeatureCollection schema](https://geojson.org/schema/FeatureCollection.json).
        content:
          application/json:
              schema:
                $ref: https://geojson.org/schema/FeatureCollection.json
              example:
                type: FeatureCollection
                name: lijnen
                crs:
                  type: name
                  properties:
                    name: urn:ogc:def:crs:EPSG::28992
                features:
                  - type: Feature
                    properties: {}
                    geometry:
                      type: LineString
                      coordinates:
                        - - 156264.906359842570964
                          - 601302.588919493253343
                        - - 165681.964475793502061
                          - 605544.313164469087496
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/densityCheckReport"


          headers:
            api-version:
              $ref: "#/components/headers/api-version"
        "400":
          $ref: "#/components/responses/400"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"

  /densify:
    post:
      operationId: "post-densify"
      tags:
        - Density
      summary: >
        Densify geometries using the geodetic great circle calculation for accurate CRS transformations.
      description: >
        A POST endpoint that accepts a GeoJSON object and densifies the geometries using the `max-segment-length` threshold.
      parameters:
        - $ref: "#/components/parameters/source-crs"
        - $ref: "#/components/parameters/contentCrs"
        - $ref: "#/components/parameters/maxSegmentLength"

      requestBody:
        required: true
        description: |
          GeoJSON FeatureCollection objects may contain a `crs` member containing a named CRS, to indicate the source-crs. The crs `properties.name` value should conform to the OGC URN scheme:
          ```
          "crs": {
            "type": "name",
            "properties": {
              "name": "urn:ogc:def:crs:OGC:1."3":CRS84"
            }
          }
          ```
          > **Note:** The `crs` member is not part of the [FeatureCollection schema](https://geojson.org/schema/FeatureCollection.json).
        content:
          application/json:
            schema:
              oneOf:
                - $ref: https://geojson.org/schema/Feature.json
                - $ref: https://geojson.org/schema/FeatureCollection.json
                - $ref: https://geojson.org/schema/Geometry.json
                - $ref: https://geojson.org/schema/GeometryCollection.json
            example:
              type: Feature
              properties:
                id: 1
              geometry:
                type: LineString
                coordinates:
                  - - 156264.90635984257
                    - 601302.5889194933
                  - - 165681.9644757935
                    - 605544.3131644691
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: https://geojson.org/schema/FeatureCollection.json
              example:
                type: FeatureCollection
                name: lijnen
                crs:
                  type: name
                  properties:
                    name: urn:ogc:def:crs:EPSG::28992
                features:
                  - type: Feature
                    properties: {}
                    geometry:
                      type: LineString
                      coordinates:
                        - - 156264.906359842570964
                          - 601302.588919493253343
                        - - 165681.964475793502061
                          - 605544.313164469087496
          headers:
            api-version:
              $ref: "#/components/headers/api-version"
            Content-crs:
              $ref: "#/components/headers/content-crs"

        "400":
          $ref: "#/components/responses/400"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"

  /transform:
    get:
      operationId: "get-transform"
      tags:
        - Transform
      summary: >
        Transforms the given coordinates of a point from the source CRS to the
        target CRS.
      description: >
        A simple GET endpoint that accepts coordinates of a given source CRS
        and transforms it to the provided target CRS. The input coordinates are
        a comma sperated list of numbers that can represent the xy, lat/lon or
        lon/lat with or without a third height dimension.


        Source CRS and target CRS can be defined through oneOf the query parameters
        or the headers. When both are provided then the query parameters takes precedence.
      parameters:
        - $ref: "#/components/parameters/source-crs"
        - $ref: "#/components/parameters/target-crs"
        - $ref: "#/components/parameters/epoch"
        - $ref: "#/components/parameters/contentCrs"
        - $ref: "#/components/parameters/acceptCrs"
        - $ref: "#/components/parameters/coordinates"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: https://geojson.org/schema/Point.json
              example:
                type: Point
                coordinates:
                  - 52.763875
                  - 4.069801
                  - 115.904857
            text/plain:
              schema:
                type: string
                example: "POINT Z (52.763875 4.069801 115.904857)"
                description: WKT representation of a point as POINT (...) or POINT Z (...)
          headers:
            api-version:
              $ref: "#/components/headers/api-version"
            Content-crs:
              $ref: "#/components/headers/content-crs"
            Epoch:
              $ref: "#/components/headers/epoch"

        "400":
          $ref: "#/components/responses/400"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"

    post:
      operationId: "post-transform"
      tags:
        - Transform
      summary: >
        Transforms the given geometries from the source CRS to the
        target CRS.
      description: >
        A POST endpoint that accepts a file of a given source CRS
        and transforms it to the provided target CRS. The input can be a GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection or a CityJSON object.


        When provided in the request the source CRS will be determined based on the content of the data. When empty then the source CRS and target CRS can be defined through oneOf the query parameters
        or the headers. When both are provided then the data takes precedences over the query parameters and the query parameters will take precedence over the headers.
      parameters:
        - $ref: "#/components/parameters/source-crs"
        - $ref: "#/components/parameters/target-crs"
        - $ref: "#/components/parameters/epoch"
        - $ref: "#/components/parameters/contentCrs"
        - $ref: "#/components/parameters/acceptCrs"
      requestBody:
        required: true
        description: |
          GeoJSON FeatureCollection objects may contain a `crs` member containing a named CRS, to indicate the source-crs. The crs `properties.name` value should conform to the OGC URN scheme:
          ```
          "crs": {
            "type": "name",
            "properties": {
              "name": "urn:ogc:def:crs:OGC:1.3:CRS84"
            }
          }
          ```
          CityJSON objects may contain a [`metadata.referenceSystem`](https://www.cityjson.org/specs/1.1.3/#referencesystem-crs) member to indicate the source-crs.
          When `crs` is specified in the request body (either in GeoJSON or in CityJSON), the `source-crs` query parameter or `content-crs` request header may be omitted.
          > **Note:** The `crs` member is not part of the [FeatureCollection schema](https://geojson.org/schema/FeatureCollection.json).
        content:
          application/json:
            schema:
              oneOf:
                - $ref: https://geojson.org/schema/Feature.json
                - $ref: https://geojson.org/schema/FeatureCollection.json
                - $ref: https://geojson.org/schema/Geometry.json
                - $ref: https://geojson.org/schema/GeometryCollection.json
              example:
                type: Feature
                geometry:
                  type: Point
                  coordinates:
                  - 66080.2628
                  - 531539.0239
                  - 73.2384
                properties:
                  id: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: https://geojson.org/schema/Feature.json
                  - $ref: https://geojson.org/schema/FeatureCollection.json
                  - $ref: https://geojson.org/schema/Geometry.json
                  - $ref: https://geojson.org/schema/GeometryCollection.json
              example:
                type: Feature
                geometry:
                  type: Point
                  coordinates:
                  - 52.763875
                  - 4.069801
                  - 115.904857
                properties:
                  id: 1


          headers:
            api-version:
              $ref: "#/components/headers/api-version"
            Content-crs:
              $ref: "#/components/headers/content-crs"
            Epoch:
              $ref: "#/components/headers/epoch"

        "400":
          $ref: "#/components/responses/400"
        "406":
          $ref: "#/components/responses/406"
        "500":
          $ref: "#/components/responses/500"

components:
  headers:
    api-version:
      description: Open API Specification version number
      schema:
        type: string
    content-crs:
      description: Source CRS
      schema:
        type: string
    epoch:
      description: Epoch of the given coordinates
      schema:
        type: string      


  parameters:
    source-crs:
      description: |
        Source Coordinate Reference System
      in: query
      name: source-crs
      example: EPSG:7415
      required: false
      schema:
        $ref: "#/components/schemas/crs-enum"

    target-crs:
      description: Target Coordinate Reference System
      in: query
      name: target-crs
      example: EPSG:7931
      required: false
      schema:
        $ref: "#/components/schemas/crs-enum"

    epoch:
      description: Epoch of the coordinates
      in: query
      name: epoch
      example: 2010.1
      required: false
      schema:
        type: number

    coordinates:
      description: Coordinates of the query point as comma seperated list, see `source-crs` parameter for order and required number of the coordinates
      in: query
      name: coordinates
      required: true
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/coords"

    contentType:
      description: Content Type
      in: header
      name: Content-Type
      required: false
      schema:
        default: application/json
        enum:
          - application/json
        type: string

    contentCrs:
      description: Source CRS
      in: header
      name: content-crs
      required: false
      example: EPSG:7415
      schema:
        $ref: "#/components/schemas/crs-enum"

    acceptCrs:
      description: Target CRS
      in: header
      name: accept-crs
      required: false
      example: EPSG:7931
      schema:
        $ref: "#/components/schemas/crs-enum"

    maxSegmentLength:
      description: Maximum segment length for densify and density-check
      in: query
      name: max-segment-length
      required: false
      schema:
        default: 200
        type: number
        minimum: 200

    maxSegmentDeviation:
      description: Maximum segment deviation for densify and density-check
      in: query
      name: max-segment-deviation
      required: false
      schema:
        type: number
        minimum: 0.001

  responses:
    "200-oas":
      description: OK
      content:
        application/openapi+json:
          schema:
             $ref: "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.1/schema.yaml"
        text/html:
          schema:
            type: "string"
      headers:
        api-version:
          $ref: "#/components/headers/api-version"


    # "200":
    #   description: OK
    #   headers:
    #     api-version:
    #       $ref: "#/components/headers/api-version"
    "400":
      description: Bad request. The request body does not contain valid GeoJSON or the query is not supported by the API.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error"
      headers:
        api-version:
          $ref: "#/components/headers/api-version"
    "406":
      description: Not Acceptable. Currently the API can only return `application/json`
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error"
      headers:
        api-version:
          $ref: "#/components/headers/api-version"

    "500":
      description: An internal error occurred in the server
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error"
      headers:
        api-version:
          $ref: "#/components/headers/api-version"


    htmlSchema:
      description: HTML representation



    ConformanceDeclaration:
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
      # content:
      #   application/json:
      #     schema:
      #       $ref: "#/components/schemas/confClasses"
      # headers:
      #   api-version:
      #     $ref: "#/components/headers/api-version"

  schemas:
    Axis:
      properties:
        name:
          type: string
          title: Name
        abbrev:
          type: string
          title: Abbrev
        direction:
          type: string
          title: Direction
        unit_conversion_factor:
          type: number
          title: Unit Conversion Factor
        unit_name:
          type: string
          title: Unit Name
        unit_auth_code:
          type: string
          title: Unit Auth Code
        unit_code:
          type: string
          title: Unit Code
      type: object
      required:
        - name
        - abbrev
        - direction
        - unit_conversion_factor
        - unit_name
        - unit_auth_code
        - unit_code
      title: Axis
    Crs:
      properties:
        name:
          type: string
          title: Name
        type_name:
          type: string
          title: Type Name
        crs_auth_identifier:
          $ref: "#/components/schemas/crs-enum"
        authority:
          type: string
          title: Authority
        identifier:
          type: string
          title: Identifier
        axes:
          items:
            $ref: '#/components/schemas/Axis'
          type: array
          title: Axes
      type: object
      required:
        - name
        - type_name
        - authority
        - identifier
        - axes
      title: CRS
      example:
        name: Amersfoort / RD New
        type_name: Projected CRS
        crs_auth_identifier: EPSG:28992
        authority: EPSG
        identifier: "28992"
        axes:
          - name: Easting
            abbrev: X
            direction: east
            unit_conversion_factor: 1
            unit_name: metre
            unit_auth_code: EPSG
            unit_code: "9001"
          - name: Northing
            abbrev: "Y"
            direction: north
            unit_conversion_factor: 1
            unit_name: metre
            unit_auth_code: EPSG
            unit_code: "9001"
        nr_of_dimensions: 2

    crs-enum:
      type: string
      enum:
        - EPSG:28992
        - EPSG:4258
        - EPSG:4937
        - EPSG:7415
        - EPSG:7931
        - EPSG:7912
        - EPSG:4326
        - EPSG:3857
        - OGC:CRS84
        - EPSG:9928
      example: EPSG:28992

    coords:
      type: array
      nullable: false
      items:
        type: number
      minItems: 2
      maxItems: 3
      default: [66080.2628, 531539.0239, 73.2384]

    densityCheckReport:
      type: object
      properties:
        checkPassed:
          type: boolean
        report:
          type: array
          items:
            type: array
            items:
              anyOf:
                - type: array
                  items:
                    type: integer
                - type: number
      example:
                passesCheck: false
                featuresReport:
                  - - - 0
                      - 0
                    - 10327.96658923969
    landingPage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
          example: Coordinatetransformation API
        description:
          type: string
          example: >
            Landing page of the Coordinatetransformation API
        links:
          type: array
          items:
            $ref: "#/components/schemas/link"
    link:
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          example: http://www.opengis.net/def/crs/EPSG/0/28992
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: EPSG:28992
        length:
          type: integer

    # confClasses:
    #   type: object
    #   required:
    #     - conformsTo
    #   properties:
    #     conformsTo:
    #       type: array
    #       items:
    #         type: string
    #         example: "http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core"

    Error:
      type: object
      description: "Object specified according to https://tools.ietf.org/html/rfc7807."
      required:
        - title
        - status
        - detail
      properties:
        type:
          type: string
          description: URI to a page with more information about this error.
          example: "about:blank"
        title:
          type: string
          example: Not Found
        status:
          type: integer
          format: int32
          example: 404
        detail:
          type: string
          example: HTTP 404 Not Found
        instance:
          type: string
          example: self
