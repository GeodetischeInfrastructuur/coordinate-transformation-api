---
openapi: 3.0.3
info:
  title: Coordinates Transformation API
  version: 2.0.0
  description: >
    The Coordinates Transformation API is a service for transformation between
    different coordinate reference systems (CRS), using the official RDNAPTRANSâ„¢
    transformation procedure.

    Currently supported coordinate reference systems:
      - 2D RD (EPSG:28992)
      - 3D RD&NAP (EPSG:7415), which is a compound CRS of RD (EPSG:28992) and
        NAP (EPSG:5709).
      - 3D ETRS89 realisation ETRF2000 (EPSG:7931), which has a 2D equivalent
        (EPSG:9067) and is a member of the datum ensemble 3D ETRS89 (EPSG:4937)
        with 2D equivalent (EPSG:4258).

    When using the input for (or using the output as) an ITRS realisation like
    2D WGS84 (EPSG:4326) instead of the ETRS89 realisation 3D ETRF2000
    (EPSG:7931),this gives an approximation of about 1 metre.

    When the input contains 3D coordinates outside the bounds of the
    quasi-geoid grid or 2D coordinates, this will result in a 2D transformation
    for these coordinates.

    Next to the transformation of coordinates, the Transformation API checks
    the maximum length of line segments. When the input contains line segments
    longer than allowed for the user specified value for the accepted deviation
    of long line segments (input property: acceptDeviationLongLineSegments),
    this will result in a bad request with the following message: "The input
    contains one or more line segments of more than ___ km. To guarantee an
    accuracy within the accepted deviation of ___ m for long line segments,
    this is not allowed. Please insert additional vertices according to the
    intended trajectory, e.g. a geodesic, a loxodrome, a straight line in RD or
    a straight line in another map projection."
  contact:
    name: NSGI
    email: info@nsgi.nl
    url: https://www.nsgi.nl
  termsOfService: https://creativecommons.org/licenses/by/4.0/
  x-keywords:
    - geospatial
    - api
    - transformations

servers:
  - url: http://localhost:8000/

paths:
  /:
    get:
      tags:
        - Common
      summery: Landing page
      description: >
        Landing page describing what the capabilities are of this
        service.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/responses/LandingPage"
            text/html:
              schema:
                $ref: "#/components/responses/htmlSchema"

        400:
          $ref: "#/components/responses/400"
        406:
          $ref: "#/components/responses/406"
        500:
          $ref: "#/components/responses/500"

  /openapi:
    get:
      tags:
        - Common
      summery: This document
      description: The Open API Spec document for this service.
      parameters:
        - $ref: "#/components/parameters/contentType"
      responses:
        200:
          description: OK
          $ref: "#/components/responses/200"
          headers:
            API-Version:
              $ref: "#/components/headers/API-Version"

        400:
          $ref: "#/components/responses/400"
        406:
          $ref: "#/components/responses/406"
        500:
          $ref: "#/components/responses/500"

  /conformance:
    get:
      tags:
        - Common
      summery: Conformance page
      description: >
        Conformance page describing what the capabilities are of this
        service.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ConformanceDeclaration"
            text/html:
              schema:
                $ref: "#/components/responses/htmlSchema"
          headers:
            API-Version:
              $ref: "#/components/headers/API-Version"

        400:
          $ref: "#/components/responses/400"
        406:
          $ref: "#/components/responses/406"
        500:
          $ref: "#/components/responses/500"

  /transform:
    get:
      tags:
        - Transform
      summery: >
        Transforms the given coordinates of a point from the source CRS to the
        target CRS.
      description: >
        A simple GET endpoint that accepts coordinates of a given source CRS
        and transforms it to the provided target CRS. The input coordinates are
        a comma sperated list of numbers that can represent the xy, lat/lon or
        lon/lat with or without a third height dimension.
      parameters:
        - $ref: "#/components/parameters/source-crs"
        - $ref: "#/components/parameters/target-crs"
        - $ref: "#/components/parameters/coordinates"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: https://geojson.org/schema/Point.json
              example: >
                {"type": "Point", "coordinates": [52.763875, 4.069801, 115.904857]}
            text/plain:
              schema:
                $ref: "#/components/responses/wktSchema"
          headers:
            API-Version:
              $ref: "#/components/headers/API-Version"

        400:
          $ref: "#/components/responses/400"
        406:
          $ref: "#/components/responses/406"
        500:
          $ref: "#/components/responses/500"

    post:
      tags:
        - Transform
      summery: >
        Transforms the given geometries from the source CRS to the
        target CRS.
      description: >
        A simple GET endpoint that accepts coordinates of a given source CRS
        and transforms it to the provided target CRS. The input coordinates are
        a comma sperated list of numbers that can represent the xy, lat/lon or
        lon/lat with or without a third height dimension.
      parameters:
        - $ref: "#/components/parameters/source-crs"
        - $ref: "#/components/parameters/target-crs"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: https://geojson.org/schema/Feature.json
                - $ref: https://geojson.org/schema/FeatureCollection.json
                - $ref: https://geojson.org/schema/Geometry.json
                - $ref: https://geojson.org/schema/GeometryCollection.json         
            example: >
              {"type": "Feature", "geometry": {"type": "Point", "coordinates": [66080.2628, 531539.0239, 73.2384]}, "properties": {"id": 1}}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: https://geojson.org/schema/Feature.json
                  - $ref: https://geojson.org/schema/FeatureCollection.json
                  - $ref: https://geojson.org/schema/Geometry.json
                  - $ref: https://geojson.org/schema/GeometryCollection.json
              example: >
                {"type": "Feature", "geometry": {"type": "Point", "coordinates": [52.763875, 4.069801, 115.904857]}, "properties": {"id": 1}}
          headers:
            API-Version:
              $ref: "#/components/headers/API-Version"

        400:
          $ref: "#/components/responses/400"
        406:
          $ref: "#/components/responses/406"
        500:
          $ref: "#/components/responses/500"

components:
  headers:
    API-Version:
      description: Open API Specification version number
      schema:
        type: string

  parameters:
    source-crs:
      description: |
        Source Coordinate Reference System
      in: query
      name: source-crs
      required: true
      schema:
        $ref: "#/components/schemas/crs"
      default: EPSG:7415

    target-crs:
      description: Target Coordinate Reference System
      in: query
      name: target-crs
      required: true
      schema:
        $ref: "#/components/schemas/crs"
      default: EPSG:4937

    coordinates:
      description: Coordinates of the query point as comma seperated list, see `source-crs` parameter for order and required number of the coordinates
      in: query
      name: coordinates
      required: true
      style: form
      explode: false
      schema:
        $ref: "#/components/schemas/coords"

    contentType:
      description: Content Type
      in: header
      name: Content-Type
      required: false
      schema:
        default: application/json
        enum:
          - application/json
        type: string

  responses:
    "400":
      description: Bad request. The request body does not contain valid GeoJSON or the query is not supported by the API.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error"
      headers:
        API-Version:
          $ref: "#/components/headers/API-Version"

    "406":
      description: Not Acceptable. Currently the API can only return `application/json` 
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error"
      headers:
        API-Version:
          $ref: "#/components/headers/API-Version"

    "500":
      description: An internal error occurred in the server
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error"
      headers:
        API-Version:
          $ref: "#/components/headers/API-Version"

    LandingPage:
      description: |-
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        the Conformance declaration (path `/conformance`,
        link relation `conformance`), and the Coordinate
        Transformation (path `/transform`, link relation
        `transform`).
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/landingPage"
      example:
        title: Coordinatetransformation API
        description: >
          Landing page of the Coordinatetransformation API
        links:
          - href: "http://data.example.org/"
            rel: self
            type: application/json
            title: this document
          - href: "http://data.example.org/api"
            rel: service-desc
            type: application/vnd.oai.openapi+json;version=3.0
            title: the API definition
          - href: "http://data.example.org/api.html"
            rel: service-doc
            type: text/html
            title: the API documentation
          - href: "http://data.example.org/conformance"
            rel: conformance
            type: application/json
            title: OGC API conformance classes implemented by this server
          - href: "http://data.example.org/collections"
            rel: data
            type: application/json
            title: Information about the feature collections
      headers:
        API-Version:
          $ref: "#/components/headers/API-Version"

    htmlSchema:
      description: HTML representation
      type: string
      example: "<html>...<html>"
      headers:
        API-Version:
          $ref: "#/components/headers/API-Version"

    wktSchema:
      description: WKT representation of a point as POINT (...) or POINT Z (...)
      type: string
      example: "POINT Z (52.763875 4.069801 115.904857)"
      headers:
        API-Version:
          $ref: "#/components/headers/API-Version"      

    ConformanceDeclaration:
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/confClasses"
      example:
        conformsTo:
          - "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core"
          - "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30"
          - "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/html"
          - "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"
      headers:
        API-Version:
          $ref: "#/components/headers/API-Version"

  schemas:
    crs:
      type: string
      enum:
        - EPSG:28992
        - EPSG:4258
        - EPSG:4937
        - EPSG:7415
        - EPSG:4326
        - EPSG:3857
        - OGC:CRS84

    coords:
      type: array
      nullable: false
      items:
        type: float
      minItems: 2
      maxItems: 3
      default: [66080.2628, 531539.0239, 73.2384]

    landingPage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
          example: Coordinatetransformation API
        description:
          type: string
          example: >
            Landing page of the Coordinatetransformation API
        links:
          type: array
          items:
            $ref: "#/components/schemas/link"

    confClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
            example: "http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core"

    Error:
      type: object
      description: "Object specified according to https://tools.ietf.org/html/rfc7807."
      required:
        - title
        - status
        - detail
      properties:
        type:
          type: string
          description: URI to a page with more information about this error.
          example: "about:blank"
        title:
          type: string
          example: Not Found
        status:
          type: integer
          format: int32
          example: 404
        detail:
          type: string
          example: HTTP 404 Not Found
        instance:
          type: string
          example: self
